#!/usr/bin/env node
const util=require("./utils"),print=require("./print");function _carryBit(t,o){return t*1024**(o-1)*8}function _dropBit(t,o){return t/1024**(o-1)/8}function _up(t,o){return t/1024**o}function _down(t,o){return t*1024**o}function _format(t){return{Bit:{toBit:()=>t,toByte:()=>_dropBit(t,1),toKB:()=>_dropBit(t,2),toMB:()=>_dropBit(t,3),toGB:()=>_dropBit(t,4),toTB:()=>_dropBit(t,5)},Byte:{toBit:()=>_carryBit(t,1),toByte:()=>t,toKB:()=>_up(t,1),toMB:()=>_up(t,2),toGB:()=>_up(t,3),toTB:()=>_up(t,4)},KB:{toBit:()=>_carryBit(t,2),toByte:()=>_down(t,1),toKB:()=>t,toMB:()=>_up(t,1),toGB:()=>_up(t,2),toTB:()=>_up(t,3)},MB:{toBit:()=>_carryBit(t,3),toByte:()=>_down(t,2),toKB:()=>_down(t,1),toMB:()=>t,toGB:()=>_up(t,1),toTB:()=>_up(t,2)},GB:{toBit:()=>_carryBit(t,4),toByte:()=>_down(t,3),toKB:()=>_down(t,2),toMB:()=>_down(t,1),toGB:()=>t,toTB:()=>_up(t,1)},TB:{toBit:()=>_carryBit(t,5),toByte:()=>_down(t,4),toKB:()=>_down(t,3),toMB:()=>_down(t,2),toTB:()=>t,toGB:()=>_down(t,1)}}}exports.ByteFmt=async function(){var{ok:t,msg:o,data:B}=await util.Inquirer([{type:"rawlist",name:"from",choices:["Bit","Byte","KB","MB","GB","TB"]},{type:"rawlist",name:"to",choices:["Bit","Byte","KB","MB","GB","TB"]},{type:"input",name:"byte"}]);if(t){var{from:r,to:t,byte:B}=B;if(!util.IsNumber(B))return print.Error("参数错误");r=_format(B)[r][`to${t}`]();print.Message(`${r} ${t}`)}else print.Error(o)};